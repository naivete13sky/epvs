psexec，需要在远程机器中开户管理员账户。
net user administrator /active:yes
设置密码为cc。



pyinstaller打包
直接命令打包，会先生成main.spec文件。然后根据此文件打包。
pyinstaller --exclude "settings/*" -i static\pic\ico\logo.ico main.py

下面命令是带控制台窗口的
pyinstaller --exclude "settings/*" --add-data "ccMethod\\*;ccMethod" --add-data "static;static" --add-data "settings\\*;settings" --add-data "config_g\\bin\\*;config_g\\bin" --add-data "log;log" --add-data "help;help" main.py

下面命令是不带控制台窗口的
pyinstaller --noconsole --exclude "settings/*" --add-data "ccMethod\\*;ccMethod" --add-data "static;static" --add-data "settings\\*;settings" --add-data "config_g\\bin\\*;config_g\\bin" --add-data "log;log" --add-data "help;help" main.py


pyinstaller --exclude "settings/*" --add-data "static;static" --add-data "settings\\*;settings" --add-data "config_g\\bin\\*;config_g\\bin" --add-data "log;log" --add-data "help;help" main.py --noconsole



 --add-data "static;static" --add-data "settings\\*;settings" --add-data "config_g\\bin\\*;config_g\\bin" --add-data "log;log" --add-data "help;help"是
 把settings文件夹、config_g文件夹、ccMethod文件夹、log文件夹拷到main里。
 这样编辑好的程序在别的人电脑里也可以运行了。

 --noconsole这个命令的作用是让报错信息在窗口中提示。在后台命令框提示错误无法捕捉时用（一闪而过）。


根据main.spec文件打包，上面那个命令中设置参数的方法生成了main.spec文件，后续可以在此文件上修改参数，然后根据此配置文件打包。
pyinstaller .\main.spec



因为EPCAM用的是QT5.9.1，所以只能只PyQt5.9.2，只能python3.7里安装。但是python3.7.9的QWebEngine太老了，对网页支持不友好。
如果直接粗鲁地用python3.10.2、PyQt5.15版本，在开发环境下或许是可以EPCAM的，但是pyinstaller打包后是不行的，是“Qt5Xml.dll”不兼容的问题。
为了解决Qt5Xml.dll问题，可以用pyqt5的Qt5Xml.dll替换EPCAM下的Qt5Xml.dll。pyqt5的Qt5Xml.dll一般在Lib\site-packages\PyQt5\Qt5\bin。
例如：C:\Users\cheng.chen\envs\epvs_python3.10.2\Lib\site-packages\PyQt5\Qt5\bin。
替换后，在python3.10.2、PyQt5.15环境下打包的是可以运行的。





























nuitka打包
python -m nuitka --enable-plugin=pyqt5 --standalone --output-dir=dist main.py

–mingw64 默认为已经安装的vs2017去编译，否则就按指定的比如mingw(官方建议)
–standalone 独立环境，这是必须的(否则拷给别人无法使用)
–windows-disable-console 没有CMD控制窗口
–output-dir=out 生成exe到out文件夹下面去
–show-progress 显示编译的进度，很直观
–show-memory 显示内存的占用
–include-qt-plugins=sensible,styles 打包后PyQt的样式就不会变了
–plugin-enable=qt-plugins 需要加载的PyQt插件
–plugin-enable=tk-inter 打包tkinter模块的刚需
–plugin-enable=numpy 打包numpy,pandas,matplotlib模块的刚需
–plugin-enable=torch 打包pytorch的刚需
–plugin-enable=tensorflow 打包tensorflow的刚需
–windows-icon-from-ico=你的.ico 软件的图标
–windows-company-name=Windows下软件公司信息
–windows-product-name=Windows下软件名称
–windows-file-version=Windows下软件的信息
–windows-product-version=Windows下软件的产品信息
–windows-file-description=Windows下软件的作用描述
–windows-uac-admin=Windows下用户可以使用管理员权限来安装
–linux-onefile-icon=Linux下的图标位置
–onefile 像pyinstaller一样打包成单个exe文件(2021年我会再出教程来解释)
–include-package=复制比如numpy,PyQt5 这些带文件夹的叫包或者轮子
–include-module=复制比如when.py 这些以.py结尾的叫模块
–show-memory 显示内存
–show-progress 显示编译过程
–follow-imports 全部编译
–nofollow-imports 不选，第三方包都不编译。不编译代码中所有的import，比如keras，numpy之类的。
–follow-stdlib 仅选择标准库
–follow-import-to=MODULE/PACKAGE 仅选择指定模块/包编译
--follow-import-to=utils,src：需要编译成C++代码的指定的2个包含源码的文件夹，这里用,来进行分隔。
–nofollow-import-to=MODULE/PACKAGE 选择指定模块/包不进行编译